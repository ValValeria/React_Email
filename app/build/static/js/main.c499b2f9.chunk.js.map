{"version":3,"sources":["Layouts/BasicLayout.jsx","Pages/Main/Main.jsx","Context/classes/user.js","Context/data.js","Pages/Posts/Posts.jsx","Pages/AuthPage/AuthPage.jsx","routes.js","Pages/Schedule/Schedule.jsx","App.js","serviceWorker.js","Components/Header.jsx","index.js"],"names":["BasicLayout","props","className","children","Button","color","variant","to","title","disabled","viewBox","fill","d","Chip","avatar","Avatar","label","clickable","User","this","isLogged","email","password","schedules","user","Object","assign","console","log","data","errors","messages","subject","Subject","defineProperties","configurable","writable","path","inputFields","fetch","method","body","JSON","stringify","headers","response","json","status","push","setUser","id","ok","next","url","ajax","pipe","retry","catchError","e","of","useStyles","makeStyles","root","width","state","posts","classes","mainStore","request","subscribe","v","xhr","responseText","setState","length","range","map","key","Skeleton","animation","Card","CardActionArea","CardContent","Typography","gutterBottom","component","date","message","React","PureComponent","AuthPage","isSignUp","match","includes","submit","bind","createRef","interval","take","preventDefault","auth","current","querySelector","value","then","localStorage","setItem","TextField","ref","InputProps","readOnly","elem","href","onClick","Main","exact","useState","Date","selectedDate","setSelectedDate","handleDateChange","time","date_new","setHours","getHours","setMinutes","getMinutes","updateData","useEffect","form","document","_","forEach","setAttribute","Sch","Math","random","autoComplete","noValidate","multiline","rowsMax","utils","DateFnsUtils","Grid","container","justify","margin","format","onChange","KeyboardButtonProps","Divider","sendEmail","Posts","App","parse","getItem","mainStorage","Fragment","routes","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","theme","flexGrow","menuButton","marginRight","spacing","list","fullList","lists","useCallback","setTimeout","mylist","update","updateState","AppBar","position","Toolbar","IconButton","edge","aria-label","Drawer","anchor","open","onClose","List","values","ListItem","button","ListItemText","primary","keys","ReactDOM","render","Header","getElementById","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c499b2f9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport  function BasicLayout(props){\r\n    return (\r\n            <div className=\"section__area\">\r\n                <div className=\"section__wrap\">\r\n                    <div className=\"section__content\">\r\n                        {[props.children]}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React from 'react'\r\nimport {BasicLayout} from '../../Layouts/BasicLayout'\r\nimport { Button } from '@material-ui/core'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function (props){\r\n    return (\r\n        <section className=\"main__banner\">\r\n          <BasicLayout>\r\n              <div className=\"section__content-wrap \">\r\n              <div className=\"section__content-main flex_center flex_cl txt_center\">\r\n                  <h5>Schedule your time <span>🚀</span></h5>\r\n                  <p>All features are free. No payment</p>\r\n                  <div className=\"buttons\">\r\n                      <Button color=\"primary\" variant=\"contained\" >\r\n                         <Link to=\"/sendmail\">Try it now</Link>\r\n                      </Button>\r\n                      <button className=\"btn_beauty\" title=\"Under development\" disabled>\r\n                          <svg viewBox=\"0 0 24 24\" ><path fill=\"#4E5D78\" d=\"M17.8436076,12.841119 L8.54075759,18.8215226 C8.07618755,19.1201747 7.4574737,18.9856717 7.15882152,18.5211017 C7.05513038,18.3598044 7,18.1720957 7,17.9803441 L7,6.01953696 C7,5.46725221 7.44771525,5.01953696 8,5.01953696 C8.19175162,5.01953696 8.37946026,5.07466734 8.54075759,5.17835848 L17.8436076,11.1587621 C18.3081776,11.4574142 18.4426806,12.0761281 18.1440285,12.5406981 C18.0665625,12.6612008 17.9641102,12.763653 17.8436076,12.841119 Z\"></path></svg>\r\n                          <span>See how it works</span>\r\n                      </button>\r\n                  </div>\r\n              </div>\r\n              <div className=\"chips pos_abs\">\r\n              <Chip\r\n        avatar={<Avatar>F</Avatar>}\r\n        label=\"Everything is free\"\r\n        clickable\r\n        color=\"primary\"\r\n      />\r\n            <Chip\r\n        avatar={<Avatar>E</Avatar>}\r\n        label=\"Everything is Easy\"\r\n        clickable\r\n        color=\"primary\"\r\n      />\r\n            <Chip\r\n        avatar={<Avatar>R</Avatar>}\r\n        label=\"All information is reserved \"\r\n        clickable\r\n        color=\"primary\"\r\n      />\r\n              </div>\r\n              </div>\r\n          </BasicLayout>\r\n        </section>\r\n    )\r\n}","export class User{\r\n    constructor(){\r\n        this.isLogged = false;\r\n        this.email = this.password = \"\";\r\n        this.schedules = []\r\n    }\r\n\r\n    setUser(user){\r\n        Object.assign(this,user)\r\n        this.isLogged = true;\r\n        console.log(this)\r\n    }\r\n}","import {Subject} from 'rxjs';\r\nimport { User } from './classes/user';\r\nimport {ajax} from 'rxjs/ajax';\r\nimport {of} from 'rxjs'\r\nimport {retry,catchError} from 'rxjs/operators';\r\n\r\nclass Data{\r\n\r\n     constructor(){\r\n        this.data={\r\n            errors:[],\r\n            messages:[]\r\n        } \r\n\r\n        this.subject = new Subject();\r\n\r\n        Object.defineProperties(this,{\r\n            'data':{\r\n            configurable:false,\r\n            writable:false\r\n            }\r\n        })\r\n        \r\n        this.user = new User();\r\n     }\r\n\r\n     async auth(path,inputFields){\r\n       try {\r\n           const response = await fetch(path,{\r\n            method:\"POST\",\r\n            body:JSON.stringify(inputFields),\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n           })\r\n\r\n           const data = await response.json();\r\n\r\n           if ( data.status == \"user\") {\r\n                   this.data.messages.push( \"You are logged\")\r\n                   this.user.setUser({...inputFields,id:data.id||inputFields.id})\r\n           } else {\r\n                   this.data.errors = data.errors || data.messages|| []\r\n           }\r\n     \r\n       } catch (error) { \r\n       } finally {\r\n             return this.data\r\n       }\r\n     }\r\n\r\n     async sendEmail(inputFields){\r\n\r\n         try{\r\n         let response = await fetch('/sendemail',{\r\n             method:\"POST\",\r\n             body:JSON.stringify(inputFields),\r\n             headers:{\r\n                 \"Content-Type\":\"application/json\"\r\n             }\r\n         })\r\n\r\n         if(response.ok){\r\n             const json = await response.json()\r\n             \r\n             if(response.status==200){\r\n                this.data.messages.push('Your message is sent')\r\n             } else {\r\n                this.data.errors.push(...(json.errors||[]))   \r\n             }            \r\n\r\n         } else {\r\n             this.data.errors.push(\"Http Error \"+ response.status)\r\n         }\r\n        } catch (e) {\r\n            console.log(e)\r\n            this.data.errors.push(\"Http Error. Please try again\")\r\n        } finally {\r\n            this.subject.next(this.data)\r\n        }\r\n     }\r\n\r\n     request (url) {\r\n         return ajax(url).pipe(retry(3),catchError(e=>of(e)))\r\n     }\r\n}\r\n\r\nexport default new Data();","import React from 'react';\r\nimport mainStore from '../../Context/data'\r\nimport {BasicLayout} from '../../Layouts/BasicLayout'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {range} from \"lodash\"\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n  },\r\n});\r\n\r\n\r\nexport default class extends React.PureComponent{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            posts:[],\r\n            classes:{}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n       if(mainStore.user.isLogged && mainStore.user.id){\r\n           mainStore.request('http://localhost:8000/userSchedule/?id='+mainStore.user.id)\r\n           .subscribe((v)=>{\r\n               console.log(v.xhr.responseText)\r\n               this.setState({\r\n                   classes:useStyles()\r\n               })\r\n           })\r\n       } else {\r\n           console.log(mainStore.user)\r\n       }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <section >\r\n            <BasicLayout>\r\n                <div className=\"section__content-wrap \">\r\n                <div className=\"section__content-main flex_center flex_cl txt_center\">\r\n                    <h5>Your schedule <span>🚀</span></h5>\r\n                    <br/>\r\n                     <div className=\"section__items\">\r\n                       { \r\n                           !this.state.posts.length &&\r\n                           range(0,3,1).map(v=>{\r\n                               return (\r\n                              <div className={this.state.classes.root} key={v}>\r\n                                <Skeleton className={this.state.classes.root}  />\r\n                                <Skeleton animation={false} className={this.state.classes.root} />\r\n                                <Skeleton animation=\"wave\" className={this.state.classes.root}  />\r\n                                <Skeleton animation=\"wave\" className={this.state.classes.root}  />\r\n                                <Skeleton animation=\"wave\" className={this.state.classes.root}  />\r\n                              </div>\r\n                               )\r\n                           })\r\n                       }\r\n                       {\r\n                           this.state.posts.map(v=>(\r\n<Card >\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {v.date}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {v.message}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n                           ))\r\n                       }\r\n                     </div>\r\n                 </div>\r\n                </div>\r\n            </BasicLayout>\r\n          </section>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport {BasicLayout} from '../../Layouts/BasicLayout';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport data from '../../Context/data';\r\nimport { interval } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\n\r\nexport default class AuthPage extends React.PureComponent{\r\n\r\n     constructor(props){\r\n          super(props)\r\n          this.state = {\r\n              isSignUp: this.props.match.path.includes(\"/signup\"),\r\n              errors:[],\r\n              messages:[],\r\n              isLogged:false\r\n          }\r\n          this.submit = this.submit.bind(this)\r\n          this.email = React.createRef('email')\r\n          this.password = React.createRef('password')\r\n     }\r\n     \r\n     componentDidMount(){\r\n        interval(1000)\r\n        .pipe(\r\n            take(3)\r\n        ).subscribe((v)=>{\r\n            if(data.user.isLogged){\r\n                this.setState({\r\n                   isLogged:true\r\n               })\r\n            } \r\n        })\r\n     }\r\n\r\n     submit(e){\r\n          e.preventDefault();\r\n          data.auth(this.props.match.path,{email:this.email.current.querySelector('input').value,password:this.password.current.querySelector('input').value})\r\n          .then((v)=>{\r\n              this.setState({...v,isLogged:data.user.isLogged})\r\n              localStorage.setItem('auth',JSON.stringify(data.user))\r\n          })\r\n     }\r\n\r\n     render(){\r\n         return (\r\n             <section className = \"banner ban_2\">\r\n                 <BasicLayout>\r\n                      <div className=\"schedule__area h_100\">\r\n                          {true &&\r\n                           <form className=\"auth__form\" >\r\n                               <div className=\"headline\">\r\n                                   {this.state.isSignUp ? \"Sign up\" : \"Login\"}\r\n                               </div>\r\n                               <div className=\"email\">\r\n                                   <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" ref={this.email} \r\n                                    InputProps={{\r\n                                        readOnly:this.state.isLogged,\r\n                                      }}\r\n                                   />\r\n                               </div>\r\n                               <div className=\"password\">\r\n                                   <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" \r\n                                   ref = {this.password}\r\n                                   InputProps={{\r\n                                    readOnly:  this.state.isLogged,\r\n                                   }}\r\n                                   />\r\n                               </div>\r\n                               <div className=\"errors\">\r\n                                   {this.state.errors.map(elem=>{\r\n                                       return (<Button variant=\"outlined\" color=\"warn\" key={elem} href=\"#outlined-buttons\">\r\n                                       {elem}\r\n                                     </Button>)\r\n                                   })}\r\n                               </div>\r\n                               <div className=\"messages\">\r\n                                   {this.state.messages.map(elem=>{\r\n                                       return (<Button variant=\"outlined\" color=\"primary\" key={elem} href=\"#outlined-buttons\">\r\n                                       {elem}\r\n                                     </Button>)\r\n                                   })}\r\n                               </div>\r\n                               <div className=\"actions\">\r\n                                   {!data.user.isLogged && <Button variant=\"contained\" color=\"primary\" onClick = {this.submit}>Submit</Button>}\r\n                               </div>\r\n                           </form>\r\n                          }\r\n                      </div>\r\n                 </BasicLayout>\r\n             </section>\r\n         );\r\n     }\r\n}\r\n\r\n","import Main from './Pages/Main/Main.jsx'\r\nimport Schedule from './Pages/Schedule/Schedule.jsx'\r\nimport Posts from './Pages/Posts/Posts'\r\nimport AuthPage from './Pages/AuthPage/AuthPage.jsx'\r\n\r\nexport default [\r\n    {\r\n        path:\"/\",\r\n        component:Main,\r\n        exact:true,\r\n    },\r\n    {\r\n        path:\"/sendmail\",\r\n        component:Schedule,\r\n        exact:true,\r\n    },\r\n    {\r\n        path:\"/signup\",\r\n        component:AuthPage,\r\n        exact:true,\r\n    },\r\n    {\r\n        path:\"/login\",\r\n        component:AuthPage,\r\n        exact:true,\r\n    },\r\n    {\r\n        path:\"/posts\",\r\n        component:Posts,\r\n        exact:true,\r\n    },\r\n    {\r\n        path:\"\",\r\n        component:Main,\r\n    }\r\n]\r\n\r\n","import 'date-fns';\r\nimport React ,{useEffect}from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { Card, Divider } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { Button } from '@material-ui/core';\r\nimport {BasicLayout} from '../../Layouts/BasicLayout';\r\nimport { useState } from 'react';\r\nimport mainStore from '../../Context/data'\r\nimport _ from 'lodash';\r\n\r\nexport default function Schedule(){\r\n\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n  const email= React.createRef();\r\n  const message=React.createRef();\r\n    \r\n  const handleDateChange = (time,date) => {\r\n\r\n    setSelectedDate(()=>{\r\n      if(time){\r\n        const date_new=new Date(selectedDate);\r\n        date_new.setHours(date.getHours())\r\n        date_new.setMinutes(date.getMinutes())\r\n        return date_new;\r\n      } \r\n      return date;\r\n    }); \r\n  };\r\n\r\n  const [data,updateData] = useState({errors:[],messages:[]});\r\n  \r\n  mainStore.subject.subscribe((v)=>{\r\n    updateData(v)\r\n  })\r\n    \r\n  const handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    mainStore.sendEmail({date:selectedDate,email:email.current.querySelector('input').value,message:message.current.querySelector('textarea').value})\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    const form=document.querySelector('#send_email');\r\n    const attributes={\"type\":\"email\",\"required\":\"true\",\"minlength\":\"10\",\"maxlength\":\"40\"}\r\n\r\n    _.forEach(attributes,(value,key)=>{\r\n        form.querySelector('input').setAttribute(key,value)\r\n\r\n        if(key==\"minlength\"|| key==\"maxlength\"){\r\n            form.querySelector('textarea').setAttribute(key,value)\r\n        }\r\n    })\r\n\r\n    form.querySelector('input').setAttribute('type','email')\r\n  })\r\n\r\n  \r\n  const Sch= (\r\n      <div className=\"schedule__area\" key={Math.random()}>\r\n        <Card>\r\n          <form   autoComplete=\"off\" id=\"send_email\" noValidate={false}>\r\n              <div className=\"headline\">\r\n                  Schedule an event\r\n              </div>\r\n\r\n              <div className=\"email\">\r\n                 <TextField id=\"standard-basic\" ref={email} label=\"Email\" value = {mainStore.user.email} />\r\n              </div>\r\n\r\n              <div className=\"message\">\r\n                <TextField id=\"standard-multiline-flexible\" ref={message} label=\"Message\" multiline   rowsMax={4} />\r\n              </div>\r\n\r\n              <div className=\"date\">\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Date\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange.bind(null,false)}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Time \"\r\n          value={selectedDate}\r\n          onChange={handleDateChange.bind(null,'time')}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n              </div>\r\n              <div className=\"errors__area\">\r\n              {\r\n                data.errors.map(elem=>{\r\n                  return (\r\n                <>    \r\n                <Button  color=\"secondary\" key={elem+Math.random()}>\r\n                  {elem}\r\n                </Button>\r\n                <Divider/>\r\n                </>\r\n                   )\r\n                })  \r\n              }\r\n              {\r\n                data.messages.map(elem=>{\r\n                  return (\r\n                  <>  \r\n                 <Button  color=\"primary\" key={elem+Math.random()}>\r\n                  {elem}\r\n                </Button>\r\n                 <Divider/>\r\n                  </>\r\n                   )\r\n                })  \r\n              }\r\n              </div>\r\n              <div>\r\n                  <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit} >Send</Button>\r\n              </div>\r\n          </form>\r\n   </Card>\r\n   </div>\r\n    )\r\n\r\n    return (\r\n    <div className=\"banner\" >\r\n    <BasicLayout>\r\n          {Sch}\r\n    </BasicLayout>\r\n    </div>  \r\n    );\r\n}\r\n\r\n","import React,{useEffect} from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom'\nimport routes from './routes'\nimport mainStorage from './Context/data';\n\nfunction App() {\n  \n  useEffect(()=>{\n     try{\n       const data = JSON.parse(localStorage.getItem('auth'))\n\n       if ( \"email\" in data && \"password\" in data){\n            mainStorage.auth('/login')\n       }\n     } catch (e) {}\n  })\n\n  return (\n    <React.Fragment>\n       <Switch>\n            {\n              [routes.map(elem=>{\n                return <Route {...elem} key={elem+Math.random()} />\n              })]\n            }\n       </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React,{useState,useEffect} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useCallback } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom'\r\nimport { interval } from 'rxjs';\r\nimport {take} from 'rxjs/operators';\r\nimport mainStore from '../Context/data'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n  }));\r\n\r\n\r\nexport default function (){\r\n    const classes = useStyles();\r\n\r\n\r\n    const lists=useCallback(()=>{\r\n      const data = [{\"Main\":\"http://localhost:3000\"}]\r\n      \r\n      setTimeout(()=>{\r\n        if (!mainStore.user.isLogged) {\r\n          data.push({\"Login\":\"/login\"},{\"Sign up\":\"/signup\"})\r\n        } \r\n      },2000)\r\n  \r\n      data.push({'Send mail':\"/sendmail\"},{\"Your schedule\":\"/posts\"});\r\n  \r\n      return data;\r\n    })\r\n\r\n    const [mylist,update] = useState(lists())\r\n\r\n    useEffect(()=>{\r\n      interval(1000)\r\n      .pipe(\r\n         take(3)\r\n      ).subscribe((v)=>{\r\n         const data = lists();\r\n\r\n         if(data !==  mylist){\r\n           update(data)\r\n         }\r\n      })\r\n    })\r\n\r\n    const [state,updateState]=useState(false);\r\n\r\n    return (\r\n   <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={()=>updateState(true)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            <Link to =\"/\">\r\n              Schedule\r\n            </Link>\r\n          </Typography> \r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer anchor={\"left\"} open={state} onClose={()=>updateState(false)}>\r\n          <div className=\"menu__icon\">\r\n          <Button href=\"#text-buttons\" color=\"primary\">\r\n              Menu\r\n          </Button>\r\n          </div>\r\n          <List>\r\n          {\r\n              mylist.map((elem)=>{\r\n                  return (\r\n                  <>   \r\n                <Link to={ Object.values(elem)[0]} className=\"links\">\r\n                  <ListItem button key={Math.random()} className={classes.list}>\r\n                          <ListItemText primary={Object.keys(elem)[0]} />\r\n                  </ListItem>\r\n                </Link>\r\n                <Divider/>\r\n                  </>\r\n                  )\r\n              })\r\n          }\r\n          </List>\r\n      </Drawer>\r\n    </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport Header from './Components/Header'\n\nReactDOM.render(\n    <BrowserRouter>\n          <Header/>\n          <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}